# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master
pool:
  vmImage: 'ubuntu-16.04' # Hosted Ubuntu 1604
  demands: maven

steps:
- task: Maven@3
  displayName: 'Maven app/pom.xml'
  inputs:
    mavenPomFile: 'pom.xml'
    codeCoverageToolOption: Cobertura
    options: '-DskipTests'
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      # Write your commands here
		    sh 'rm -rf *.properties'
        sh "echo jobName=${env.JOB_NAME} >> $env:BUILD_ARTIFACTSTAGINGDIRECTORY/environment-variables.txt"
        sh "echo buildNumber=${env.BUILD_NUMBER} >> $env:BUILD_ARTIFACTSTAGINGDIRECTORY/environment-variables.txt"
        sh "echo repoName=$repoName >> $env:BUILD_ARTIFACTSTAGINGDIRECTORY/environment-variables.txt"
        sh "echo branchName=$branchName >> $env:BUILD_ARTIFACTSTAGINGDIRECTORY/environment-variables.txt"
        sh "echo repoURL=$repoURL >> $env:BUILD_ARTIFACTSTAGINGDIRECTORY/environment-variables.txt"		    		    
        sh "echo commitID=${env.shortCommit} >> $env:BUILD_ARTIFACTSTAGINGDIRECTORY/environment-variables.txt"
        sh "echo BlackDuckProject=Canada-Application >> $env:BUILD_ARTIFACTSTAGINGDIRECTORY/environment-variables.txt"
        sh "echo BlackDuckVersion=${finalVersion} >> $env:BUILD_ARTIFACTSTAGINGDIRECTORY/environment-variables.txt"
        echo 'Hello:world' >> $env:BUILD_ARTIFACTSTAGINGDIRECTORY/environment-variables.txt

- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: '**/*.war'
    TargetFolder: '$(build.artifactstagingdirectory)'
  condition: succeededOrFailed()

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
  condition: succeededOrFailed()